# ABOUTME: Alternative Woodpecker CI configuration using manual Docker commands
# ABOUTME: Works around potential plugin authentication issues

clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      recursive: true
      lfs: false

when:
  event: [push, tag, cron, manual]
  branch: [main, master, develop, release/*]

steps:
  # Build and push Ubuntu image using Docker directly
  build-ubuntu:
    image: docker:dind
    privileged: true
    commands:
      # Start Docker daemon
      - dockerd-entrypoint.sh &
      - sleep 5
      
      # Login to registry
      - echo "Logging in to Docker registry..."
      - echo "${NEXUS_PASSWORD}" | docker login 172.20.0.26:8082 -u "${NEXUS_USERNAME}" --password-stdin
      
      # Build the image
      - echo "Building Ubuntu image..."
      - docker build \
          --build-arg BUILD_DATE="${CI_BUILD_CREATED}" \
          --build-arg VCS_REF="${CI_COMMIT_SHA}" \
          --build-arg DEBIAN_FRONTEND=noninteractive \
          -f Dockerfile \
          -t 172.20.0.26:8082/openspp/openspp:latest \
          -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_BRANCH} \
          -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8} \
          .
      
      # Push the images
      - echo "Pushing images..."
      - docker push 172.20.0.26:8082/openspp/openspp:latest
      - docker push 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_BRANCH}
      - docker push 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8}
    environment:
      NEXUS_USERNAME:
        from_secret: nexus_username
      NEXUS_PASSWORD:
        from_secret: nexus_password
    when:
      event: [push, tag, cron, manual]

  # Build and push Slim image
  build-slim:
    image: docker:dind
    privileged: true
    commands:
      # Start Docker daemon
      - dockerd-entrypoint.sh &
      - sleep 5
      
      # Login to registry
      - echo "Logging in to Docker registry..."
      - echo "${NEXUS_PASSWORD}" | docker login 172.20.0.26:8082 -u "${NEXUS_USERNAME}" --password-stdin
      
      # Build the slim image
      - echo "Building Slim image..."
      - docker build \
          --build-arg BUILD_DATE="${CI_BUILD_CREATED}" \
          --build-arg VCS_REF="${CI_COMMIT_SHA}" \
          --build-arg DEBIAN_FRONTEND=noninteractive \
          -f Dockerfile.slim \
          -t 172.20.0.26:8082/openspp/openspp:latest-slim \
          -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_BRANCH}-slim \
          -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8}-slim \
          .
      
      # Push the images
      - echo "Pushing slim images..."
      - docker push 172.20.0.26:8082/openspp/openspp:latest-slim
      - docker push 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_BRANCH}-slim
      - docker push 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8}-slim
    environment:
      NEXUS_USERNAME:
        from_secret: nexus_username
      NEXUS_PASSWORD:
        from_secret: nexus_password
    when:
      event: [push, tag, cron, manual]

  # Notify on completion
  notify:
    image: plugins/webhook
    settings:
      urls:
        from_secret: webhook_url
      method: POST
      content_type: application/json
      template: '{
        "text": "OpenSPP Docker Build ${CI_BUILD_STATUS}",
        "build": "${CI_BUILD_NUMBER}",
        "branch": "${CI_COMMIT_BRANCH}",
        "commit": "${CI_COMMIT_SHA:0:8}"
      }'
    when:
      event: [push, tag, cron, manual]
      status: [success, failure]
    failure: ignore