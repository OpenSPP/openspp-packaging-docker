# ABOUTME: Working Woodpecker CI Pipeline for OpenSPP Docker Images
# ABOUTME: Uses explicit Docker commands with manual login (based on openspp-packaging-v2 pattern)

clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      recursive: true
      lfs: false

when:
  event: [push, tag, cron, manual]

steps:
  # Build and push Ubuntu Docker image
  build-ubuntu:
    image: docker:latest
    environment:
      NEXUS_USER:
        from_secret: nexus_username
      NEXUS_PASS:
        from_secret: nexus_password
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      # Verify Docker is available
      - docker --version
      # Use the secret that's available
      - |
        if [ -n "$NEXUS_USER" ]; then
          echo "Using nexus_username secret"
        else
          echo "ERROR: No Nexus credentials found!"
          exit 1
        fi
      
      # Setup Docker buildx
      - echo "Setting up Docker buildx..."
      - docker buildx create --use --name openspp-builder --driver-opt network=host || true
      - docker buildx inspect --bootstrap
      
      # Login to Nexus Docker registry (port 8082)
      # Note: Registry must be configured as insecure on the host
      - echo "Logging in to Nexus Docker registry at 172.20.0.26:8082..."
      - echo "$NEXUS_PASS" | docker login 172.20.0.26:8082 -u "$NEXUS_USER" --password-stdin
      
      # Determine tags based on event
      - |
        if [ "${CI_BUILD_EVENT}" = "tag" ]; then
          echo "Building for tag: ${CI_COMMIT_TAG}"
          TAGS="-t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_TAG} -t 172.20.0.26:8082/openspp/openspp:latest"
        elif [ "${CI_BUILD_EVENT}" = "cron" ]; then
          echo "Building for cron/daily"
          TAGS="-t 172.20.0.26:8082/openspp/openspp:daily -t 172.20.0.26:8082/openspp/openspp:latest"
        elif [ "${CI_COMMIT_BRANCH}" = "main" ] || [ "${CI_COMMIT_BRANCH}" = "master" ]; then
          echo "Building for main branch"
          TAGS="-t 172.20.0.26:8082/openspp/openspp:latest -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8}"
        else
          echo "Building for branch: ${CI_COMMIT_BRANCH}"
          TAGS="-t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_BRANCH} -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8}"
        fi
      
      # Build and push Ubuntu image
      - echo "Building Ubuntu image..."
      - |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          --build-arg VCS_REF=${CI_COMMIT_SHA} \
          $TAGS \
          --output type=registry,registry.insecure=true \
          -f Dockerfile \
          .
      
      - echo "✓ Ubuntu image built and pushed successfully"

  # Build and push Slim Docker image
  build-slim:
    image: docker:latest
    environment:
      NEXUS_USER:
        from_secret: nexus_username
      NEXUS_PASS:
        from_secret: nexus_password
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      # Verify Docker is available
      - docker --version
      # Use the secret that's available
      - |
        if [ -n "$NEXUS_USER" ]; then
          echo "Using nexus_username secret"
        else
          echo "ERROR: No Nexus credentials found!"
          exit 1
        fi
      
      # Check if Dockerfile-slim exists
      - |
        if [ ! -f "Dockerfile-slim" ]; then
          echo "Dockerfile-slim not found, skipping slim build"
          exit 0
        fi
      
      # Setup Docker buildx (reuse if exists)
      - echo "Setting up Docker buildx..."
      - docker buildx use openspp-builder || docker buildx create --use --name openspp-builder --driver-opt network=host
      
      # Login to Nexus Docker registry
      - echo "Logging in to Nexus Docker registry..."
      - echo "$NEXUS_PASS" | docker login 172.20.0.26:8082 -u "$NEXUS_USER" --password-stdin
      
      # Determine tags
      - |
        if [ "${CI_BUILD_EVENT}" = "tag" ]; then
          TAGS="-t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_TAG}-slim -t 172.20.0.26:8082/openspp/openspp:latest-slim"
        elif [ "${CI_BUILD_EVENT}" = "cron" ]; then
          TAGS="-t 172.20.0.26:8082/openspp/openspp:daily-slim -t 172.20.0.26:8082/openspp/openspp:latest-slim"
        elif [ "${CI_COMMIT_BRANCH}" = "main" ] || [ "${CI_COMMIT_BRANCH}" = "master" ]; then
          TAGS="-t 172.20.0.26:8082/openspp/openspp:latest-slim -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8}-slim"
        else
          TAGS="-t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_BRANCH}-slim -t 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8}-slim"
        fi
      
      # Build and push Slim image
      - echo "Building Slim image..."
      - |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          --build-arg VCS_REF=${CI_COMMIT_SHA} \
          $TAGS \
          --output type=registry,registry.insecure=true \
          -f Dockerfile-slim \
          .
      
      - echo "✓ Slim image built and pushed successfully"
    failure: ignore  # Don't fail pipeline if slim build fails

  # Test images after build
  test-images:
    image: docker:latest
    commands:
      - echo "Testing built images..."
      - docker pull 172.20.0.26:8082/openspp/openspp:${CI_COMMIT_SHA:0:8} || echo "Could not pull test image"
      - echo "✓ Build pipeline completed"
    when:
      - event: [push, tag, cron, manual]
    failure: ignore

  # Optional: Mirror to public registry for pulling
  mirror-to-public:
    image: docker:latest
    environment:
      NEXUS_USER:
        from_secret: nexus_username
      NEXUS_PASS:
        from_secret: nexus_password
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      # Use the secret that's available
      - |
        if [ -n "$NEXUS_USER" ]; then
          echo "Using nexus_username secret"
        else
          echo "WARNING: No Nexus credentials found, skipping mirror"
          exit 0
        fi
      
      # Only mirror on main branch or tags
      - |
        if [ "${CI_BUILD_EVENT}" != "tag" ] && [ "${CI_COMMIT_BRANCH}" != "main" ] && [ "${CI_COMMIT_BRANCH}" != "master" ]; then
          echo "Skipping mirror for feature branch"
          exit 0
        fi
      
      # Login to internal registry
      - echo "$NEXUS_PASS" | docker login 172.20.0.26:8082 -u "$NEXUS_USER" --password-stdin
      
      # Pull from internal
      - docker pull 172.20.0.26:8082/openspp/openspp:latest
      
      # Retag for public registry (different port for public access)
      - docker tag 172.20.0.26:8082/openspp/openspp:latest docker.acn.fr/openspp/openspp:latest
      
      # Login to public registry (if different credentials needed)
      - echo "$NEXUS_PASS" | docker login docker.acn.fr -u "$NEXUS_USER" --password-stdin || true
      
      # Push to public
      - docker push docker.acn.fr/openspp/openspp:latest || echo "Could not push to public registry"
    when:
      - event: [tag, cron]
    failure: ignore