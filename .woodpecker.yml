# ABOUTME: Woodpecker CI Pipeline for OpenSPP Docker Images
# ABOUTME: Builds both standard and slim images for amd64 architecture

# Global clone settings
clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      recursive: true
      lfs: false

# When to run
when:
  event: [push, tag, cron, manual]
  branch: [main, master, develop, release/*]

# Pipeline steps
steps:
  # Step 1: Build Ubuntu Docker image
  build-ubuntu:
    image: woodpeckerci/plugin-docker-buildx
    privileged: true
    settings:
      registry: docker-push.acn.fr
      repo: docker-push.acn.fr/openspp/openspp
      dockerfile: Dockerfile
      platforms: linux/amd64
      build_args:
        - BUILD_DATE=${CI_BUILD_CREATED}
        - VCS_REF=${CI_COMMIT_SHA}
        - DEBIAN_FRONTEND=noninteractive
      tags:
        - latest
        - ${CI_COMMIT_BRANCH}
        - ${CI_COMMIT_SHA:0:8}
      username:
        from_secret: nexus_username
      password:
        from_secret: nexus_password
    when:
      event: [push, tag, cron, manual]

  # Step 2: Build Slim Docker image
  build-slim:
    image: woodpeckerci/plugin-docker-buildx
    privileged: true
    settings:
      registry: docker-push.acn.fr
      repo: docker-push.acn.fr/openspp/openspp
      dockerfile: Dockerfile.slim
      platforms: linux/amd64
      build_args:
        - BUILD_DATE=${CI_BUILD_CREATED}
        - VCS_REF=${CI_COMMIT_SHA}
        - DEBIAN_FRONTEND=noninteractive
      tags:
        - latest-slim
        - ${CI_COMMIT_BRANCH}-slim
        - ${CI_COMMIT_SHA:0:8}-slim
      username:
        from_secret: nexus_username
      password:
        from_secret: nexus_password
    when:
      event: [push, tag, cron, manual]

  # Step 3: Test Docker images
  test-docker:
    image: docker:latest
    commands:
      # Test Ubuntu image
      - docker run --rm docker.acn.fr/openspp/openspp:${CI_COMMIT_SHA:0:8} openspp-server --version || true
      
      # Test slim image
      - docker run --rm docker.acn.fr/openspp/openspp:${CI_COMMIT_SHA:0:8}-slim openspp-server --version || true
      
      # List images
      - docker images | grep openspp || true
    when:
      event: [push, tag, cron, manual]
      status: success

  # Step 4: Push production tags (only on tags)
  push-production:
    image: woodpeckerci/plugin-docker-buildx
    privileged: true
    settings:
      registry: docker-push.acn.fr
      repo: docker-push.acn.fr/openspp/openspp
      tags:
        - ${CI_COMMIT_TAG}
        - stable
      username:
        from_secret: nexus_username
      password:
        from_secret: nexus_password
      dry_run: false
    when:
      event: tag

  # Step 5: Notify on completion
  notify:
    image: plugins/webhook
    settings:
      urls:
        from_secret: webhook_url
      method: POST
      content_type: application/json
      template: '{
        "text": "OpenSPP Docker Build ${CI_BUILD_STATUS}",
        "attachments": [{
          "color": "{{ build.status }}",
          "title": "Build #${CI_BUILD_NUMBER}",
          "text": "Docker images build completed",
          "fields": [
            {"title": "Repository", "value": "${CI_REPO_NAME}", "short": true},
            {"title": "Branch", "value": "${CI_COMMIT_BRANCH}", "short": true},
            {"title": "Commit", "value": "${CI_COMMIT_SHA:0:8}", "short": true},
            {"title": "Status", "value": "${CI_BUILD_STATUS}", "short": true}
          ]
        }]
      }'
    when:
      event: [push, tag, cron, manual]
      status: [success, failure]
    failure: ignore